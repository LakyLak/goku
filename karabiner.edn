;*===================== KE-goku-config 0.92 5/07/19 ======================
;  post goku update
;*META ===========================================================
	; TODO: omnifocus:///task/bUT2ZCV3zLT
	;TODO; reconcile /Users/loudog/Dropbox/Sync/KarabinerElements/complex-modificationsSync/CuratedExamples.json and  /Users/loudog/.config/karabiner/assets/complex_modifications/LouSpaceMode.json
	; TODO: remote-mode, escape toggle passthrough, shift+space for underscores and space +</> for caps, respond to stack overflow about includes
	; TODO: create gold standard snippet templates that allow for identified prioritized "benefits...good things about them" mode and template snippets (take into account readability, modularity, propogation,...)
	; TODO Scrolling [:j {:mkey {:vwheel 100}}] [:k {:mkey {:vwheel -100}}] https://github.com/yqrashawn/GokuRakuJoudo/issues/18
{ ;========================= DEFINITIONS ============================
	:templates { ;=.........................................................................................................................
		:alf "osascript -e 'tell application \"Alfred 3\" to run trigger \"%s\" in workflow \"%s\" with argument \"\"'"
		:km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
		:btt "osascript -e 'tell application \"BetterTouchTool\" to  trigger_named \"%s\"'"
		:type "osascript -e 'tell application \"System Events\" to keystroke \"%s\"'" ; send keystroke
		:escp "osascript -e 'tell application \"System Events\" to key code 53' " ; send escape
		:sendq "osascript -e 'tell application \"System Events\" to keystroke \"q\"'" ; send keystroke
		:sendreturn "osascript -e 'tell application \"System Events\" to keystroke return' " ; send escape
		:sendspace "osascript -e 'tell application \"System Events\" to keystroke space' " ; send keystroke
		:sendesc "osascript -e 'tell application \"System Events\" to keystroke tab' " ; send keystroke
		; :escp "osascript -e 'tell application \"System Events\" to key code 53' -e 'sleep 2' -e 'key code \"a\"' -e 'end tell' " ; with -e for new line
		:beep "afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/WindowActivated.aiff" ; audible feedback  to know when KE trigger occurs, must be in wrapped in bracketes and coupled with another action in a bracketed array to work
		:wait "sleep 250"}
		;:open "open \"%s\""
	:layers { ;=...............................................................................................................................
		:space-mode {:key :spacebar :condi [:!fÂµ :!dÂµ :!cÂµ :!kÂµ :!wÂµ :!Rctrl-mode :!LâŒ˜]} ;prevents space mode from overiding F and D modes
		; :fn-mode {:key :fn :condi [:!fÂµ :!dÂµ :!cÂµ :!kÂµ :!wÂµ]}
		:Rctrl-mode {:key :right_control :alone {:key :spacebar} :condi [:!fÂµ :!dÂµ :!cÂµ :!kÂµ :!wÂµ :!space-mode]} ; :Rctrl-mode {:key :right_control :condi [:!fÂµ :!dÂµ :!cÂµ :!kÂµ :!wÂµ]}
		:numpad-mode {:key :f20} ;
		}
	:simlayers { ;=..........................................................................................................................
		:semicolon-mode {:key :semicolon}
		:slash-mode {:key :slash}
		:aÂµ {:key :a}
		:bÂµ {:key :b}
		:cÂµ {:key :c}
		:dÂµ {:key :d :condi :!space-mode} ;why is this n
		:eÂµ {:key :e}
		:fÂµ {:key :f}
		:gÂµ {:key :g}
		:hÂµ {:key :h}
		:iÂµ {:key :i}
		:jÂµ {:key :j}
		:kÂµ {:key :k}
		:lÂµ {:key :l}
		:mÂµ {:key :m}
		:nÂµ {:key :n}
		:rÂµ {:key :r}
		:sÂµ {:key :s}
		:uÂµ {:key :u} ;
		:wÂµ {:key :w}
		:periodÂµ {:key :period}
		};

:main [ ; =========================== MAIN ===========================
;============================ HOLDINGKEY =========================
		{:des "Holding Keys: âŒ˜V for Clipboard History, â‡§âŒ˜3 for Screenshot Palette, â‡§âŒ˜4 for Snagit" :rules [
					[:!Cv nil nil {:alone :!Cv :held [:km "Clipboard History"] :repeat false :halt true :params{:alone 150 :held 150}} ] ; default :alone is 500ms and would be too long
					[:!SC3 nil nil {:alone :!SC3 :held [:km "-Screenshot Palette"] :repeat false :halt true :params{:alone 150 :held 150}} ]
					[:!SC4 nil nil {:alone :!SC4 :held [:km "-Snagit Palette"] :repeat false :halt true :params{:alone 150 :held 150}} ]
		]}
;======================== TAP and DOUBLEPRESS and MODIFIERS  =====================
	;; C T O S and Q W E R
	;TODO work on bartender shortcuts...

	{:des "Quit application by pressing âŒ˜q twice" :rules[ [:!C#Pq [ [:beep] :!Cq ["âŒ˜q" 0]] ["âŒ˜q" 1]]
			[:!C#Pq ["âŒ˜q" 1] nil {:delayed {:invoked ["âŒ˜q" 0] :canceled ["âŒ˜q" 0]}}] ]}

	;* Double Press Left command gives âŒ˜p palette and double pressing âŒ˜ space gives other thing
			{:des "Double Press LâŒ˜ Alone for alfred" :rules[ [:condi :!fÂµ :!dÂµ :!cÂµ :!kÂµ :!wÂµ :!Rctrl-mode]
			; [:left_gui [[:beep] :!Cspacebar  ["LâŒ˜" 0]] ["LâŒ˜" 1]] :! for command space..
			[:left_gui [[:beep] :!Cp  ["LâŒ˜" 0]] ["LâŒ˜" 1]] ;! for command P
			[:left_gui :left_gui nil {:alone ["LâŒ˜" 1] :delayed{:invoked ["LâŒ˜" 0] :canceled ["LâŒ˜" 0]}} ]

			;* Double cpress âŒ˜Spacebar for something...
			[:!Cspacebar [[:beep] :!Ospacebar  ["LâŒ˜spacebar" 0]] ["LâŒ˜spacebar" 1]]
			[:!Cspacebar :!Cspacebar nil {:alone ["LâŒ˜spacebar" 1] :delayed{:invoked ["LâŒ˜spacebar" 0] :canceled ["LâŒ˜spacebar" 0]}} ]
			]}

	;* Shift Space for underscore and dash
		{:des "Shift Space for underscor and dash"
		:rules[ [:!Sspacebar :!Shyphen][:!Sright_control :!Shyphen] [:!Rspacebar :hyphen] ]}

	;* Shift Shift for move window
		{:des "Shift to shift " :rules[ [:!Sright_shift [:beep]] [:!Rleft_shift [:beep]] ]}
		{:des "Shift to opposite command " :rules[ [:!Sright_gui [:beep]] [:!Rleft_gui [:beep]] ]}_
		{:des "Left Command to Right Command " :rules[ [:!Cright_gui [:beep]] [:!Qleft_gui [:beep]] ]}_

	;* Single Press modifier ; ;! breaks numpad mode
	  ; {:des   "Change right_command to command-tab when used alone"
                      ;  :rules [[:right_command :right_command nil {:alone [:!Ctab]}]
                              ;  ]}1
;======================== SIMULTANEOUSKEY ========================
	{:des "Simultaneous Keys":rules [
		[ [:k :m] [ [:km "Activate Keyboard Maestro"]] ] ;* km to activate Keyboard Maestro
		[ [:v :c]  [:km "Activate Visual Studio Code"] ] ;* vc to Activate Visual Studio Code
		; [ [:n :m]  [:km "Activate Messages"] ] ;* nm to Activate Messages ;! go to active message...
		; [ [:n :i] [[:beep] :!STCo] ] ;! * ni to OmniFocus Quick Entry
		; [ [:spacebar :d] [[:beep] [:km "Show Desktop Mgmt Palette"]] ]
		; [ [:s :d ] [[:beep] [:km "Show Desktop Mgmt Palette"]] ];! accidentally triggered...
		[ [:1 :2 ] [[:beep] :f13] ]
		[ [:1 :4 ] [[:beep] :!Cf13] ]
		[ [:1 :5 ] [[:beep] :!SCf13] ]
		[ [:1 :6 ] [[:beep] :!SCTf13] ]
		[ [:1 :7 ] [[:beep] :!SCOTf13] ]
		; [ [:left_                                                                             :right_shift ] [[:beep] :caps_lock] ]
		]}
;======================= HYPER MODE and MODIFIERS ======================
	; {:des "Capslock as hyper" :rules [[:##caps_lock :!!left_control   [:!fÂµ :!dÂµ] {:alone :escape}]] }
	; {:des "Capslock as hyper" :rules [[:##caps_lock :!!left_control nil {:alone :escape} ]] }
	{:des "Capslock as hyper" :rules [ [:condi :!space-mode :!Rctrl-mode]
		[:##caps_lock :!!left_control nil {:alone :escape} ] ] }

	;* UHK FN as mac fn
	{:des "FN from UHK" :rules [
		[:#SOCTf24 :fn [:uhk-keyboard] ]]}

	{:des "return_or_enter" :rules [[:##return_or_enter :left_control nil {:alone :return_or_enter} ]] }
	;* ðŸ’¡ idea to include (l)âŒ˜_space tap and holding
	; {:des "left+right command for numpad" :rules [[:!Cright_gui  :left_control nil {:alone :return_or_enter} ]] } ; numpad mode


;=========================== SPACE MODE ==========================
	{:des "spacebar mode" :rules [
			[:##j :left_arrow [:space-mode :!numpad-mode]] ;* cursor navigation
					[:##l :right_arrow [:space-mode :!numpad-mode]]
					[:##i :up_arrow [:space-mode :!numpad-mode]]
					[:##k :down_arrow [:space-mode :!numpad-mode]]
			[:##u :!Stab [:space-mode :!numpad-mode]] ;* non-text characters
					[:##o :tab [:space-mode :!numpad-mode]]
					[:##p :delete_or_backspace :space-mode]
					[:##y :page_up [:space-mode :!numpad-mode]]
					[:##h :page_down [:space-mode :!numpad-mode]]
			[:##s :left_shift [:space-mode :!numpad-mode]] ;* modifiers
					[:##f :left_command [:space-mode :!numpad-mode]]
					[:##a :left_control [:space-mode :!numpad-mode]]
					[:##d :left_option [:space-mode :!numpad-mode]]
			[:##period :!Speriod [:space-mode :!numpad-mode]] ;* Shift for Symbols
				[:##comma :!Scomma [:space-mode :!numpad-mode]]
				[:##1 :!S1 [:space-mode :!numpad-mode]] ;*
				[:##2 :!S2 [:space-mode :!numpad-mode]]
				[:##3 :!S3 [:space-mode :!numpad-mode]]
				[:##4 :!S4 [:space-mode :!numpad-mode]]
				[:##5 :!S5 [:space-mode :!numpad-mode]]
				[:##6 :!S6 [:space-mode :!numpad-mode]]
				[:##7 :!S7 [:space-mode :!numpad-mode]]
				[:##8 :!S8 [:space-mode :!numpad-mode]]
				[:##9 :!S9 [:space-mode :!numpad-mode]]
				[:##0 :!S0 [:space-mode :!numpad-mode]]
			[:##grave_accent_and_tilde :escape :space-mode] ; backtick for escape
			[:##w :!!f14 :space-mode] ; activate Moom
			[:##caps_lock :escape :space-mode] ; capslock for escape
			[:##b :spacebar :space-mode] ; b for space bar

			;* Numpad Mode
				[:##semicolon :return_or_enter [:space-mode :!numpad-mode]]
				[:right_gui ["numpad-mode" 1] :space-mode {:alone ["numpad-mode" 1] :afterup ["numpad-mode" 0]}] ;
				[:right_control ["numpad-mode" 1] :space-mode {:alone ["numpad-mode" 1] :afterup ["numpad-mode" 0]}] ;
				; [:right_gui [ :beep :set["numpad-mode" 1]] :space-mode ] ;!
				; [:right_gui ["numpad-mode" 1] nil {:alone ["numpad-mode" 1] :afterup ["numpad-mode" 0]}];!
		]}
	;* Right Control Mode
	{:des "Right Control mode" :rules [
			[:##w :!!f14 :Rctrl-mode] ;* activate Moom
			[:right_gui ["numpad-mode" 1] :Rctrl-mode {:alone ["numpad-mode" 1] :afterup ["numpad-mode" 0]}]
			[:spacebar ["numpad-mode" 1] :Rctrl-mode {:alone ["numpad-mode" 1] :afterup ["numpad-mode" 0]}]
	]}
;======================= Â NUMPAD MODE =======================
	{:des "Numpad Mode" :rules [
			[:j :1 :numpad-mode]
			[:k :2 :numpad-mode]
			[:l :3 :numpad-mode]
			[:u  :4 :numpad-mode]
			[:i :5 :numpad-mode]
			[:o :6 :numpad-mode]
			[:7 :7 :numpad-mode]
			[:8 :8 :numpad-mode]
			[:9 :9 :numpad-mode]
			[:m :0 :numpad-mode]
 			[:period :period :numpad-mode]
			[:slash :slash :numpad-mode]
			[:p :delete_or_backspace :numpad-mode]
			[:semicolon :return_or_enter :numpad-mode]
			[:right_control :spacebar :numpad-mode]
			[:spacebar :spacebar :numpad-mode]
	]}
;============================ A MODE ============================
{	:des "a-mode for a things" :rules [
		;+ a+k+...............................................................................................................................
			[:k :!CTSt [["aÂµ" 1] ["akÂµ" 1]]] ;+ a+kÂ² for km macro 1
	:aÂµ ;* â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
		;* a+k for blank (held if held)
				[:k [ [:beep] :!Oescape ["akÂµ" 1] ] nil {:delayed {:canceled [ ["akÂµ" 0]["aÂµ" 0] ]
				:invoked [ [:vk_none] ["akÂµ" 0] ] }:held [ [:km "a held"] ["akÂ¬" 1]] }]
		[:c [[:beep] :!Oescape] ]		;* a+c for autocomplete now

		[:semicolon :!Osemicolon] ;â€¢ a+semicolon for elipse (to be used as suffix to trigger things)
]}
;============================ D MODE =============================
	{:des "d-mode for d things" :rules [
		;+ d+spacebar+..................................................................................................................
			;+ d+spacebarÂ² for Show Desktop Mgmt Palette
			[:spacebar [ [:km "Show Desktop Mgmt Palette"]] [["dÂµ" 1] ["dspacebarÂµ" 1]]]
			;+ d+right_controlÂ² for Show Desktop Mgmt Palette
			[:right_control [ [:km "Show Desktop Mgmt Palette"]] [["dÂµ" 1] ["dright_controlÂµ" 1]]]
			;+ d+spacebar+k for Trigger Macro by Name
			[:k [:escape [:km "Trigger Macro by Name"]] [["dÂµ" 1] ["dspacebarÂµ" 1]]]
		;+ d+m+..............................................................................................................................
			;+ d+mÂ² for...
			[:m [:km "Minimize Window"] [["dÂµ" 1] ["dmÂµ" 1]]]
			;+ d+m+s for Move Tab Left
			[:s :!ST8 [["dÂµ" 1] ["dmÂµ" 1]]]
			;+ d+m+f for Move Tab Right
			[:f :!ST9 [["dÂµ" 1] ["dmÂµ" 1]]]
			;+ d+m+comma for Move Window Active Space Left (delay)
			[:comma [:km "Move Window Active Space left (delay)"] [["dÂµ" 1] ["dmÂµ" 1]]]
			;+ d+m+period for Move Window Active Space Right (delay)
			[:period [:km "Move Window Active Space Right (delay)"] [["dÂµ" 1] ["dmÂµ" 1]]]
	:dÂµ ;* â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
		;* d+spacebar for âŒ˜P...
				[:spacebar [ :!Cp ["dspacebarÂµ" 1] ] nil {:delayed{:canceled [["dspacebarÂµ" 0]["dÂµ" 0]]
				:invoked [ [:vk_none] ["dspacebarÂµ" 0] ] }:held [ [:km "Move Window Active Space Right (delay)"] ["dspacebarÂ¬" 1] ] }]
		;* d+right_control for âŒ˜P...
				[:right_control [ :!Cp ["dright_controlÂµ" 1] ] nil {:delayed{:canceled [["dright_controlÂµ" 0]["dÂµ" 0]]
				:invoked [ [:vk_none] ["dright_controlÂµ" 0] ] }:held [ [:km "Move Window Active Space Right (delay)"] ["dright_controlÂ¬" 1] ] }]
		;* d+escape for âŒ˜âŒ¥â‡§P (Global Macro Palette) or should everything just be prepended with the "`" or spacebar?...
				[:escape [ :!Cp ["descapeÂµ" 1] ] nil {:delayed
				{:canceled [ ["descapeÂµ" 0]["dÂµ" 0] ] ; 'i' is said for everything
				:invoked [ [:km "blank"] ["descapeÂµ" 0] ] } ; is triggered as delayed response even when holding
				:held [ [:km "Move Window Active Space Right (delay)"] ["descapeÂ¬" 1]] }]
		;* Tab Manipulation....................................................
			[:s :!TStab] 							;   ; =   S for tab left (via â‡§â‡¥ with action set in App native or KM)
			[:f :!Ttab] 							   ; =   F   = â‡¥
			[:a :!Copen_bracket] 			   ;    a for Back Page via âŒ˜[
			[:g :!Cclose_bracket] 		   ;    g for Forward Page via âŒ˜]
			[:w [:km "Item Up Â©"]]		   ;    w for Item Up via âŒ˜]
			[:v [:km "Item Down Â©"]]		   ;    v for Item Up via âŒ˜]

			[:c :!Cquote] 					   ;    c for âŒ˜'
		;* d+m for moving tab/window left/right.....................
				[:m [ [:vk_none]  ["dmÂµ" 1] ] nil {:delayed
				{:canceled [ ["dmÂµ" 0]["dÂµ" 0] ] ; 'i' is said for everything
				:invoked [ [:vk_none] ["dmÂµ" 0] ] } ; is triggered as delayed response even when holding
				:held [ [:km "Move Window Active Space Right (delay)"] ["dmÂ¬" 1]] }]

			[:#Sj :!O#Sleft_arrow] ;*jlik for âŒ¥ navigation....................................................
			[:#Sl :!O#Sright_arrow]
			[:#Si :!O#Sup_arrow]
			[:#Sk :!O#Sdown_arrow]
		[:comma [:km "Switch Second Space Left"] ] ;* c+, for Switch Second Space Left
		[:period [:km "Switch Second Space Right"] ] ;* c+. for Switch Second Space Right


	]}
;============================ C MODE =============================
	{:des "c-mode for c things" :rules [
		;+ c+o+...............................................................................................................................
			[:o [:km "Query Contacts"] [["cÂµ" 1] ["coÂµ" 1]]] ;+ c+oÂ² for Query Contacts
			[:n [:km "Connect Palette"] [["cÂµ" 1] ["coÂµ" 1]]] ;+ c+o+n for Connect Palette
			[:spacebar [:km "Query Contacts"] [["cÂµ" 1] ["coÂµ" 1]]] ;+ c+o+spacebar for Query Contacts
		;+ c+a+...............................................................................................................................
			[:a [:km "Activate Calendar"] [["cÂµ" 1] ["caÂµ" 1]]] ;+ c+aÂ² for Activate Calendar
			[:spacebar [:km "Query Calendar"] [["cÂµ" 1] ["caÂµ" 1]]] ;+ c+a+spacebar for Query Calendar
			[:s [:km "Capitalize Selection"] [["cÂµ" 1] ["caÂµ" 1]]] ;+ c+a+s for Capitalize Selection
	:cÂµ ;* â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
		;* c+o for contacts
				[:o [ [:vk_none] ["coÂµ" 1] ] nil {:delayed{:canceled [ ["coÂµ" 0]["cÂµ" 0] ]:invoked
				[ [:km "Activate Contact"] ["coÂµ" 0] ] } :held [ [:km "held"] ["coÂ¬" 1]] }]
		;* c+a for blank (held if held)...........................
				[:a [ [:vk_none] ["caÂµ" 1] ] nil {:delayed{:canceled [ ["caÂµ" 0]["cÂµ" 0]]:invoked
				[[:km "Activate Calendar"] ["caÂµ" 0]] } :held [[:km "held"] ["caÂ¬" 1]] }]
		;*jlik for âŒ˜ Cursor navigation..............................
			[:#Sj :!C#Sleft_arrow]
			[:#Sl :!C#Sright_arrow]
			[:#Si :!C#Sup_arrow]
			[:#Sk :!C#Sdown_arrow]
		[:d :!Cquote] ;* c+d for âŒ˜' (tag in evernote, )
		[:comma [:km "switch internal space left"] ] ;* c+, for switch internal space left
		[:period [:km "switch internal space right"] ] ;* c+. for switch internal space right
	]}
;============================ G MODE ============================
	{:des "g-mode" :rules [

		;+ g+o+...............................................................................................................................
			[:o [:km "GoTo Palette"] [["gÂµ" 1] ["goÂµ" 1]]] ;+ g+oÂ² fo GoTo Palette
			[:i [:km "GoTo OmniFocus Inbox"] [["gÂµ" 1] ["goÂµ" 1]]] ;+ g+o+i for GoTo OmniFocus Inbox
			[:d [:km "GoTo OmniFocus To Do"] [["gÂµ" 1] ["goÂµ" 1]]] ;+ g+o+d for GoTo OmniFocus To Do
			[:w [:km "GoTo Now@"] [["gÂµ" 1] ["goÂµ" 1]]] ;+ g+o+w for GoTo Now@
			[:m [:km "GoTo Gmail Inbox"] [["gÂµ" 1] ["goÂµ" 1]]] ;+ g+o+m for GoTo Gmail Inbox
		;+ g+m+...............................................................................................................................
			[:m [:km "Go To Messages"] [["gÂµ" 1] ["gmÂµ" 1]]] ;+ g+mÂ² for Go To Messages
			[:l [:km "GoTo Gmail Inbox"] [["gÂµ" 1] ["gmÂµ" 1]]] ;+ g+m+l for km macro 2

	:gÂµ ;* â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
		;* g+o for blank (held if held)
				[:o [ [:vk_none] ["goÂµ" 1] ] nil {:delayed
				{:canceled [ ["goÂµ" 0]["gÂµ" 0] ]
				:invoked [ [:km "GoTo Palette"] ["goÂµ" 0] ] }
				:held [ [:km "test"] ["goÂ¬" 1]]
				}]
		;* g+m for blank (held if held)
				[:m [ [:vk_none] ["gmÂµ" 1] ] nil {:delayed {:canceled [ ["gmÂµ" 0]["gÂµ" 0] ]
				:invoked [ [:km "Go To Messages"] ["gmÂµ" 0] ] }:held [ [:km "g held"] ["gmÂ¬" 1]] }]

		[:spacebar [:km "Click GUI Button"]] ;* g+spacebar for Click GUI Button
		[:right_control [:km "Click GUI Button"]] ;* g+right_control for Click GUI Button
	]}
;============================ J MODE =============================
	{:des "j-mode" :rules [
			;+ j+d+...............................................................................................................................
				;+ j+dÂ² for...
				[:d [:km "Jump to Daily Journal"] [["jÂµ" 1] ["jdÂµ" 1]]]
			;+ j+e+...............................................................................................................................
				;+ j+eÂ² for...
				; [:d [:km "Jump to Daily Journal"] [["jÂµ" 1] ["jdÂµ" 1]]]
			;+ j+left_gui+.......................................................................................................................
			[:left_gui :!CSslash [["jÂµ" 1] ["jleft_guiÂµ" 1]]] ;+ j+left_guiÂ²
			;+ j+right_gui+.......................................................................................................................
			[:right_gui :!Cf13 [["jÂµ" 1] ["jright_guiÂµ" 1]]] ;+ j+right_guiÂ² for search bartender (via) âŒ˜F13)

	:jÂµ ;* â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
			;* j+d for daily Journal
					[:d [[:vk_none]["jdÂµ" 1]] nil {:delayed {:canceled[["jdÂµ" 0]["jÂµ" 0]]
					:invoked[[:km "Hover Recent Daily Journal Entry"]["jdÂµ" 0]] } :held[[:km "held"]["jdÂ¬" 1]] }]
			;* j+e for Jump to Evernote
					[:e [:km "Jump to Evernote" ["jeÂµ" 1]] nil {:delayed {:canceled[["jeÂµ" 0]["jÂµ" 0]]
					:invoked[:vk_none ["jeÂµ" 0]] } :held[:escape [:beep] [:km "Query Evernote"]["jeÂ¬" 1]] }]
			;* j+left_gui for blank (held if held)
					[:left_gui [ [:beep] :!FCTOSf1 ["jleft_guiÂµ" 1] ] nil {:delayed {:canceled [ ["jleft_guiÂµ" 0]["jÂµ" 0] ]
					:invoked [ [vk_none] ["jleft_guiÂµ" 0] ] }:held [ [:km "j held"] ["jleft_guiÂ¬" 1]] }]
		;* j+right_gui for blank (held if held)
				[:right_gui [ [:beep] :f13 ["jright_guiÂµ" 1] ] nil {:delayed {:canceled [ ["jright_guiÂµ" 0]["jÂµ" 0] ]
				:invoked [ [vk_none] ["jright_guiÂµ" 0] ] }:held [ [:km "j held"] ["jright_guiÂ¬" 1]] }]

		; [:left_gui [[:beep] :!FCTOSf1]] ;* (l)âŒ˜ for focus menu bar (via System Shortcut)
		; [:right_gui [[:beep] :f13]] ;* (r)âŒ˜ for focus bartender (via System Shortcut)

		[:w [[:beep] :!CTSw]] ;*Jump to Window via Context hotkey
		[:c [:alf "Search Chrome Bookmarks" "com.mdreizin.chrome.bookmarks"]]
		[:o [:km "Jump to OmniFocus"]]
		[:s [:km "Jump to Stickies"]]
		[:period [:km "Â© Open Context Menu"]]
		[:spacebar [:km "Click GUI Button"]] ;* j+spacebar for Click GUI Button

		[:a [[:beep] [:wait][:escp]]]
		[:r [:sendreturn]]
		[:q [:sendq]]
		; [:spacebar [[:beep] [:sendspace]]]
		[:1 [[:beep] [:sendesc]]]

		]}
;============================ I MODE ==============================
	{:des "i-mode for new things" :rules [
		;+ i+t+.................................................................................................................................
			;+ i+tÂ² for NA
			[:t [:km "Blank Test"] [["iÂµ" 1] ["itÂµ" 1]]]
	:iÂµ ;* â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
		;* i+t for Italicize
				[:t [ :!Ci ["itÂµ" 1] ] nil {:delayed
				{:canceled [ ["itÂµ" 0]["iÂµ" 0] ] ; 'i' is said for everything
				:invoked [ [:vk "none"] ["itÂµ" 0] ] } ; is triggered as delayed response even when holding
				:held [ :!Oleft_arrow :!OSright_arrow :!Ci ["itÂ¬" 1]]
				}]
			;* i+e for Insert Emoji
				[:e [:km "Insert Emoji"]]
	]}
;============================ R MODE ============================
	{:des "r-mode for remote things" :rules [
		;+ r+m+.............................................................................................................................
			[:m [:km "-Remote Modes Palette"] [["rÂµ" 1] ["rmÂµ" 1]]] ;+ r+mÂ² for. Remote Modes Palette
			[:y [:km "QuickTime Remote"] [["rÂµ" 1] ["rmÂµ" 1]]] ;+ r+m+q for QuickTime Remote
			[:y [:km "YouTube Remote"] [["rÂµ" 1] ["rmÂµ" 1]]] ;+ r+m+y for YouTube Remote
			[:x [:km "Deactivate Remote"] [["rÂµ" 1] ["rmÂµ" 1]]] ;+ r+m+x for Deactivate Remote

	:rÂµ ;* â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
		; TODO Scrolling [:j {:mkey {:vwheel 100}}] [:k {:mkey {:vwheel -100}}] https://github.com/yqrashawn/GokuRakuJoudo/issues/18
		;* r+m for Media Remote
				[:m [ [:vk_none] ["rmÂµ" 1] ] nil {:delayed {:canceled [ ["rmÂµ" 0]["rÂµ" 0] ] ; 'i' is said for everything
				:invoked [ [:km "Media Remote"] ["rmÂµ" 0] ] } ; is triggered as delayed response even when holding
				:held [ [:km "Deactivate Remote"] ["rmÂ¬" 1]]
				}]
		;* Transport Controls
      [:spacebar :!TOCspacebar] ;*spacebar for pause via âŒƒâŒ¥âŒ˜Space ;*j/l/i/k for remote transport controls
      [:spacebar :!TOCspacebar] ;! thought I might need to fix for right control
			[:j :!TOCleft_arrow]
			[:l :!TOCright_arrow]
			[:i :!TOCup_arrow]
			[:k :!TOCdown_arrow]
			[:a :!TOCleft_arrow]
			[:d :!TOCright_arrow]
			[:w :!TOCup_arrow]
			[:s :!TOCdown_arrow]
			[:comma :!TOCcomma]   ;*comma/dot for speed up and down via âŒƒâŒ¥âŒ˜,/.
			[:period :!TOCperiod]
			[:semicolon :!TOCsemicolon] ;*semicolon/quote for frame forward/backwoord âŒƒâŒ¥âŒ˜;/'
			[:p :!TOCp] ;*n/p for next/previous videoâŒƒâŒ¥âŒ˜;/'
			[:n :!TOCn]
			[:f :!TOCf] ;*f for fullOCreen via âŒƒâŒ¥âŒ˜f
    ;* Remote Palette
				[:return_or_enter [:km "-Remote Modes Palette"]] ;*return for remote palette
				[:m [:km "Media Remote"]] 		;*r for YouTube Remote
				[:y [:km "YouTube Remote"]] 		;*y for YouTube Remote
				[:q [:km "QuickTime Remote"]] 		;*q for QuickTime Remote
				[:x [:km "Deactivate Remote"]] 		;*q for Deactivate Remote
	]}
;============================= S Mode =============================
	{:des "s-mode for s things" :rules [
		;+ s+right_shift+.................................................................................................................
			[:right_shift [:km "Uppercase Selection"] [["sÂµ" 1] ["sright_shiftÂµ" 1]]] ;+ s+right_shiftÂ² for Uppercase Selection
			;+ s+right_shift+quote for Enclose Selection with Double Quotes
			[:quote [:km "Enclose Selection with Double Quotes"] [["sÂµ" 1] ["sright_shiftÂµ" 1]]]
	:sÂµ ;* â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“

		;* s+right_shift for transform selection case
				[:right_shift [ [:vk_none] ["sright_shiftÂµ" 1] ] nil {:delayed {:canceled [ ["sright_shiftÂµ" 0]["sÂµ" 0] ]
				:invoked [ [:km "Capitalize Selection"] ["sright_shiftÂµ" 0] ] } :held [ [:km "Uppercase Selection"] ["sright_shiftÂ¬" 1]] }]

				[:a [:km "Check Spelling (via Alfred)"]] 		;* s+a for Check Spelling (via Alfred)
				[:j :!SOleft_arrow] [:l :!SOright_arrow] [:i :!SOup_arrow] [:k :!SOdown_arrow] ;*jlik for  selection

			; TODO Scrolling [:j {:mkey {:vwheel 100}}] [:k {:mkey {:vwheel -100}}] https://github.com/yqrashawn/GokuRakuJoudo/issues/18 ;? https://github.com/yqrashawn/GokuRakuJoudo/blob/4e307c3ca7ef7f0dfb59ad8dd5112172946d7a31/test/karabiner_configurator/tos_test.clj
			;? {:mkey {:x -123 :y 123 :hwheel 13 :vwheel 1 :speed 2.0}}
		;*afed for scroll mouse
			; [:a {:mkey]
			; [:l :!SOright_arrow]
			[:a {:mkey {:hwheel 5 :speed 5}}]
			[:f {:mkey {:hwheel -5 :speed 5}}]
			[:e {:mkey {:vwheel -5 :speed 5}}]
			[:d {:mkey {:vwheel 5 :speed 5}}]
			; [:f {:mkey { :hwheel 13 :vwheel 25 :speed .1}}]

			[:t :!STCs] ;* t for Speake Text via system hot key

	]}
; ============================ L MODE =============================
	{:des "L-mode for new things" :rules [

		;+ l+b+................................................................................................................................
			;+ l+bÂ² for...
			[:b [:km "GoTo Local Bitcoin Dashboard"] [["lÂµ" 1] ["lbÂµ" 1]]]
			;+ l+b+c for LBC Palette
			[:c [:km "LBC Palette"] [["lÂµ" 1] ["lbÂµ" 1]]]
			;+ l+b+d for Local Bitcoin Dashboard
			[:d [:km "Local Bitcoin Dashboard"] [["lÂµ" 1] ["lbÂµ" 1]]]

	:lÂµ ;* â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“

		;* l+b for Local Bitcoin Stuf...............................
			[:b [ [:vk_none] ["lbÂµ" 1] ] nil {:delayed
			{:canceled [ ["lbÂµ" 0]["lÂµ" 0] ] ; 'i' is said for everything
			:invoked [ [:km "blank"] ["lbÂµ" 0] ] } ; is triggered as delayed response even when holding
			:held [ [:km "New Evernote Note"] ["lbÂ¬" 1]]
			}]
		;* l+s for..................................................
        		[:s [ [:km "Clean Line Formatting"] ["lsÂµ" 1] ] nil {:delayed
				{:canceled [ ["lsÂµ" 0]["lÂµ" 0] ] ; 'i' is said for everything
				:invoked [ [:vk_none] ["lsÂµ" 0] ] } ; is triggered as delayed response even when holding
				:held [ [:km "none"] ["lsÂ¬" 1]]
				}]
	]}
;============================= K MODE =============================
	{:des "k-mode for new things" :rules [
		;+ k+r+...................................................................................................................................
			;+ k+rÂ² for Edit KE Config
			[:r [:km "Edit KE Config"] [["kÂµ" 1] ["krÂµ" 1]]]
			;+ k+r+b for Open Edit Karabiner Keys [Sublime Project]
			[:b [:km "Open Edit Karabiner Keys [Sublime Project]"] [["kÂµ" 1] ["krÂµ" 1]]]
			;+ k+r+e for Open Edit Karabiner Elements Configuration [Sublime Project]
			[:e [:km "Open Edit Karabiner Elements Configuration [Sublime Project]"] [["kÂµ" 1] ["krÂµ" 1]]]
			;+ k+r+v for Activate Karabiner EventViewer
			[:v [:km "Activate Karabiner EventViewer"] [["kÂµ" 1] ["krÂµ" 1]]]
		;+ k+p+..................................................................................................................................
			;+ k+pÂ² for Add to Evernote End
			[:p [:km "Add to Evernote End"] [["kÂµ" 1] ["kpÂµ" 1]]]
			;+ k+p+spacebar for Query KeePass
			[:spacebar [:km "Query KeePass"] [["kÂµ" 1] ["kpÂµ" 1]]]
			;+ k+p+n for New Password
			[:n [:km "New Password"] [["kÂµ" 1] ["kpÂµ" 1]]]
		;+ k+c+..................................................................................................................................
			;+ k+cÂ² for Search Key Clue KM (alf)
			[:c [:alf "Search Key Clue KM (alf)" "me.zhaocai.keylue"] [["kÂµ" 1] ["kcÂµ" 1]]]

	:kÂµ ;* â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
			;* k+r for Karabiner Stuff
      		[:r [[:vk_none]["krÂµ" 1]] nil {:delayed {:canceled [["krÂµ" 0]["kÂµ" 0]] :invoked
					[[:km "Activate Karabiner Elements"]["krÂµ" 0]] }:held [[:vk_none]["krÂ¬" 1]] }]
			;* k+p for Activate KeePass
      		[:p [[:vk_none]["kpÂµ" 1]] nil {:delayed {:canceled [["kpÂµ" 0]["kÂµ" 0]] :invoked
					[[:km "Activate KeePass"]["kpÂµ" 0]] }:held [[:vk_none]["kpÂ¬" 1]] }]
			;* k+c for Search Key Clue KC (alf)
      		[:c [[:alf "Search Key Clue KC (alf)" "me.zhaocai.keylue"]["kcÂµ" 1]] nil {:delayed {:canceled [["kcÂµ" 0]["kÂµ" 0]] :invoked
					[[:vk_none]["kcÂµ" 0]] }:held [[:vk_none]["kcÂ¬" 1]] }]
	]}
;============================= N MODE ============================
	{:des "n mode for new things" :rules [
	; TODO: need to fix up n-mode as prototype template so I can compact it and use it as boilerplate

		;+ n+i+................................................................................................................................
			;+ n+iÂ² for Send to OmniFocus
			[:i [:km "Send to Omnifocus"] [["nÂµ" 1] ["niÂµ" 1]]]
			;+ n+i+c for New Omnifocus Clipping
			[:c [:km "New Omnifocus Clipping"] [["nÂµ" 1] ["niÂµ" 1]]]
			;+ n+i+w for New OmniFocus Webshot
			[:w [:km "New OmniFocus Webshot"] [["nÂµ" 1] ["niÂµ" 1]]]
			;+ n+i+o for testing ; !
			[:o "say 'three key...chord'" [["nÂµ" 1] ["niÂµ" 1]]]
			;+ n+i+h for testing
			[:h "say 'three key...chord'" [["nÂµ" 1] ["niÂµ" 1]]]
		;+ n+e+...............................................................................................................................
			;+ n+eÂ² for New QuickNote
			[:e [:km "New QuickNote"] [["nÂµ" 1] ["neÂµ" 1]]]
			;+ n+e+q for New QuickNote
			[:q [:km "New QuickNote"] [["nÂµ" 1] ["neÂµ" 1]]]
			;+ n+e+m for New Email
			[:m [:km "New Email"] [["nÂµ" 1] ["neÂµ" 1]]]
		;+ n+o+...............................................................................................................................
			;+ n+oÂ²
			[:o "say 'double...o'" [["nÂµ" 1] ["noÂµ" 1]] ] ;| this works well and blocks the n+c delayed trigger, trigger cancelled
			;+ n+o+w
			[:w [:km "Hover Evernote Now"] [["nÂµ" 1] ["noÂµ" 1]] ] ;* this works fine and cancels the delayi

					; h+o+w Hover Evernote Now
		[:w [:km "Hover Evernote Now"] [["hÂµ" 1] ["hoÂµ" 1]]]

		;+ n+c+...............................................................................................................................
			;+ n+c+c for...
			[:c "say 'double...c'" [["nÂµ" 1] ["ncÂµ" 1]]] ;*this works well and blocks the n+c delayed trigger
			;+ n+c+o for New Contact
			[:o [:km "New Contact"] [["nÂµ" 1] ["ncÂµ" 1]]] ; !!! does not work, triggers "canceled" and "doubled o"
			;+ n+c+a New Calendar Event
			[:a [:km "New Event"] [["nÂµ" 1] ["ncÂµ" 1]]] ;* this works fine and doesn't triger anything
		;+ n+m+...............................................................................................................................
			;+ n+mÂ² for...
			[:m [:vk_none] [["nÂµ" 1] ["nmÂµ" 1]]]
			;+ n+m+s for New Message (to self)
			[:s [:km "New Message (to self)"] [["nÂµ" 1] ["nmÂµ" 1]]]
		;+ n+t+................................................................................................................................
			;+ n+tÂ² for...
			[:t [:km "Quick Add Typinator Item"] [["nÂµ" 1] ["ntÂµ" 1]]]
			;+ n+t+s for New Typinator Item from Selection
			[:s [:km "New Typinator Item from Selection"] [["nÂµ" 1] ["ntÂµ" 1]]]
		;+ n+h+...............................................................................................................................
			;+ n+hÂ²
			[:h "say 'double...h'" [["nÂµ" 1] ["nhÂµ" 1]]]

	:nÂµ ;* â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“-
		;* n+i for New Omnifocus Quick Entry
        		[:i [ [:vk_none] ["niÂµ" 1] ] nil {:delayed
				{:canceled [ ["niÂµ" 0]["nÂµ" 0] ] ; 'i' is said for everything
				:invoked [ [:km "New Omnifocus Quick Entry"] ["niÂµ" 0] ] } ; is triggered as delayed response even when holding
				:held [ [:km "Send to Omnifocus"] ["niÂ¬" 1]]
				}]
		;* n+e for New Evernote and Email
        		[:e [ [:vk_none] ["neÂµ" 1] ] nil {:delayed
				{:canceled [ ["neÂµ" 0]["nÂµ" 0] ] ; 'i' is said for everything
				:invoked [ [:km "New QuickNote"] ["neÂµ" 0] ] } ; is triggered as delayed response even when holding
				:held [ [:km "New Evernote Note"] ["neÂ¬" 1]]
				}]
		;* n+c for New Event
    		[:c [ [:vk-none]  ["ncÂµ" 1] ] nil {:delayed
				{:canceled [ [:vk:none] ["ncÂµ" 0]["nÂµ" 0] ]
				:invoked [ [:km "New Event"]["ncÂµ" 0]["nÂµ" 0] ] } ; is invoked at tap, hold BUT NOT DOUBLE C
				:held ["say 'holding c'" ["ncÂ¬" 1]] }]

		;* n+d for New 2Do (via hotkey)
    		[:d [ [:beep] :!STC2  ["ndÂµ" 1] ] nil {:delayed
				{:canceled [ [:vk_none] ["ndÂµ" 0]["nÂµ" 0] ]
				:invoked [ [:vk_none]["ndÂµ" 0]["nÂµ" 0] ] } ; is invoked at tap, hold BUT NOT DOUBLE C
				:held [:vk_none ["ndÂ¬" 1]] }]

		;! n+o for testing ; ! TODO for  testing
			[:o [ [vk_none] ["noÂµ" 1] ] nil {:delayed ; not triggered when hold n+c,
			{:canceled [ [:vk_none] ["noÂµ" 0]["nÂµ" 0]] ; does not stop n+o from being triggered  when pushing n+c+o
			:invoked ["say 'invoked o'"["noÂµ" 0] ["nÂµ" 0] ]} ; triggerd when n+o tapped,
			:held ["say 'holding o'" ["noÂ¬" 1]]
			}]

		;* n+m for New Message
				[:m [ [:km "New Message"] ["nmÂµ" 1] ] nil {:delayed
				{:canceled [ ["nmÂµ" 0]["nÂµ" 0] ] ; 'i' is said for everything
				:invoked [ [:vk_none] ["nmÂµ" 0] ] } ; is triggered as delayed response even when holding
				:held [ [:km "New Message (to self)"] ["nmÂ¬" 1]]
				}]

		;* n+t for Typinator stuff
				[:t [ [:vk_none] ["ntÂµ" 1] ] nil {:delayed
				{:canceled [ ["ntÂµ" 0]["nÂµ" 0] ] ; 'i' is said for everything
				:invoked [ [:km "Quick Add Typinator Item"] ["ntÂµ" 0] ] } ; is triggered as delayed response even when holding
				:held [ [:km "Test Blank"] ["ntÂ¬" 1]]
				}]

		;* n+l for Log Palette
			[:l [:km "Log Palette"]]
		;* n+p for New Password
			[:p [:km "New Password"]]
		;* n+w for New Window
			[:w [:km "New Window"]]
		;* n+s for New Sticky
			[:s [:km "New Sticky"]]

		;*  n+h
      		[:h ["say 'h'"  ["nhÂµ" 1]] nil {:delayed {:canceled ["nhÂµ" 0] :invoked ["nhÂµ" 0]}}]

	]}
;============================ M Mode ============================
	{:des "m-mode for new things" :rules [
		;+ m+s+.................................................................................................................................
				[:s [:km "AVAILABLE"] [["mÂµ" 1] ["msÂµ" 1]]] ;+ m+sÂ² for km macro 1
				[:g [:km "Activate Messages"] [["mÂµ" 1] ["msÂµ" 1]]] ;+ m+s+g for Activate Messages
		;+ m+p+................................................................................................................................
				[:p [:km "AVAILABLE"] [["mÂµ" 1] ["mpÂµ" 1]]] ;+ m+pÂ² for...
		;+ m+spacebar+...............................................................................................................................
			[:spacebar [[:beep] :!STOf11] [["mÂµ" 1] ["mspacebarÂµ" 1]]] ;+ m+spacebarÂ² for km macro 1
			[:s [[:beep] :!SOTf9] [["mÂµ" 1] ["mspacebarÂµ" 1]]] ;+ m+spacebarÂ² for km macro 1
			[:x [:beep] [["mÂµ" 1] ["mspacebarÂµ" 1]]] ;+ m+spacebar+x for km macro 2

	:mÂµ ;* â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
		;* m+s for blank (held if held).....................
				[:s [ [:vk_none] ["msÂµ" 1] ] nil {:delayed {:canceled [ ["msÂµ" 0]["mÂµ" 0] ]
				:invoked [ [:vk_none] ["msÂµ" 0] ] }:held [ [:km "m held"] ["msÂ¬" 1]] }]

		;* m+spacebar for Bartender Menubar Shortcuts
				[:spacebar [ :vk_none ["mspacebarÂµ" 1] ] nil {:delayed {:canceled [ ["mspacebarÂµ" 0]["mÂµ" 0] ]
				:invoked [ [:beep] :!STOf11 ["mspacebarÂµ" 0] ] }:held [ [:beep] :!STOf10 ["mspacebarÂ¬" 1]] }]

		[:r [:km "Hover OmniFocus Morning Review"]] ;*m+r for Hover OmniFocus Morning Review
	]}
;========================= PERIOD MODE ===========================
	{:des " period-mode for typinator and autocomplete":rules [
		;+ period+o...........................................................................................................................
				[:o "say 'double o'" [["periodÂµ" 1] ["periodoÂµ" 1]]] ;+ period+oÂ² for testings
				[:d "say 'three key...chord'" [["periodÂµ" 1] ["periodoÂµ" 1]]]

    :periodÂµ ;* â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
      		; period+o
        		[:o [ [:vk_none]  ["periodoÂµ" 1] ] nil {:delayed {:canceled [ ["periodoÂµ" 0] ]
        		:invoked [ :!Cb ["periodoÂµ" 0] ] }
        		:held ["say 'holding '" ["periodoÂ¬" 1]] }]

			; period+w for highlight word
			[:spacebar [[:beep] :!SCTt] ]
			; period+l for highlight lio
			[:l [:!Ta :!TSe :!Sright_arrow] ]
	]}
;=========================== B-MODE =============================
	{:des " b-mode for b things"
    	:rules [
				; b+o mode
			    ;; b+o+o
					[:o "say 'double o'" [["bÂµ" 1] ["boÂµ" 1]]]
			    ;; b+o+c
					[:c [:km "Boldate Clean"] [["bÂµ" 1] ["boÂµ" 1]]]
				  ;; b+o+a
				  [:a [:km "Boldate Clean Left"] [["bÂµ" 1] ["boÂµ" 1]]]
          ;; b+o+d
          [:d "say 'three key...chord'" [["bÂµ" 1] ["boÂµ" 1]]]

     	:bÂµ ;
      		; b+o for Boldate Toggle
        		[:o [ [:vk_none]  ["boÂµ" 1] ] nil {:delayed {:canceled [ ["boÂµ" 0] ]
        		:invoked [ :!Cb ["boÂµ" 0] ] }
        		:held ["say 'holding '" ["boÂ¬" 1]] }]

			; b+w for highlight word
			[:w [:!Oleft_arrow :!OSright_arrow] ]
			; b+l for highlight lio
			[:l [:!Ta :!TSe :!Sright_arrow] ]
	]}
;=========================== H-MODE ==============================
	{:des " h-mode for h things" :rules [
	;* h+o+ mode
		; h+o+o
		[:o "say 'double o'" [["hÂµ" 1] ["hoÂµ" 1]]]
		; h+o+w Hover Evernote Now
		[:w [:km "Hover Evernote Now"] [["hÂµ" 1] ["hoÂµ" 1]]]
		; h+o+e Hover Recent Daily Journal Entry
		[:e [:km "Hover Recent Daily Journal Entry"] [["hÂµ" 1] ["hoÂµ" 1]]]
		; h+o+d Hover Evernote To Do
		[:d [:km "Hover Evernote To Do"] [["hÂµ" 1] ["hoÂµ" 1]]]
		; h+o+c Hover Evernote Communications/Messages
		[:c [:km "Hover Evernote Communications/Messages"] [["hÂµ" 1] ["hoÂµ" 1]]]
		; h+o+a Hover Evernote Agenda
		[:a [:km "Hover Evernote Agenda"] [["hÂµ" 1] ["hoÂµ" 1]]]

   	:hÂµ ;
      	; h+o for Hover Window
          [:o [ [:vk-none]  ["hoÂµ" 1] ] nil {:delayed {:canceled [ ["hoÂµ" 0] ]
        	:invoked [ [:km "Hover Window"] ["hoÂµ" 0] ] }
        	:held ["say 'holding o'" ["hoÂ¬" 1]] }]

				; h+w for highlight word
					[:w [:!Oleft_arrow :!OSright_arrow] ]
				; h+l for highlight lio
					[:l [:!Ta :!TSe :!Sright_arrow] ]
		]}
;============================ F MODE ============================= ; !needs work
	{:des " f-mode for f things" :rules [

	:fÂµ ;* â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
			;* f+âŒ˜ and space for clicks
			[:spacebar :button1] [:right_control :button1] ;* f+spacebar OR right-control for click
 			[:right_gui :button2];* f+right_command for right click
 			[:left_gui :button3];* f+left_command fo (!Cbutton1 doesn't work as a <to> but can be recreated using button3)

			;* f+1/2/3/4/ focus Column
				[:1 [:km "Focus 1"] ]
				[:2 [:km "Focus 2"] ]
				[:3 [:km "Focus 3"] ]
				[:4 [:km "Focus 4"] ]
				[:caps_lock [:km "Focus Sidebar"] ]
				[:return_or_enter :!STOn ] ;* Notification Center (via System Hotkey â‡§âŒ¥âŒƒN)

		;* f+q/e for focus last/next window (via System Preferences)
			[:q :!Cgrave_accent_and_tilde]
			[:e :!SCgrave_accent_and_tilde]
		; * focus left/right/up/ down via Slate
			; [:a [:!!f19 :vk_none :j :vk_none] ]
			; [:d [:!!f19 :vk_none :l :vk_none] ]
			; [:w [:!!f19 :vk_none :i :vk_none] ]j

		[:comma [:km "Switch Third Space Left"] ] ;* c+, for Switch Third Space Left
		[:period [:km "Switch Third Space Right"] ] ;* c+. for Switch Third Space Right

	]}
;============================ U MODE ============================
	{:des "u-mode for..." :rules [
		;+ u+c+...............................................................................................................................
			[:c [:km "Capitalize Word"] [["uÂµ" 1] ["ucÂµ" 1]]] ;+ u+cÂ²
			[:s [:km "Uppercase Selection"] [["uÂµ" 1] ["ucÂµ" 1]]] ;+ u+c+s for Uppercase Selection
			[:w [:km "Uppercase Word"] [["uÂµ" 1] ["ucÂµ" 1]]] ;+ u+c+w for Uppercase Word

	:uÂµ ;* â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“
		;* u+c for blank (held if held)
				[:c [ [:vk_none] ["ucÂµ" 1] ] nil {:delayed {:canceled [ ["ucÂµ" 0]["uÂµ" 0] ]
				:invoked [ [:km "Uppercase Word"] ["ucÂµ" 0] ] }:held [ [:km "u held"] ["ucÂ¬" 1]] }]

		[:s [:km "New Sticky"]] 		;* u+s for New Sticky
	]}
;============================ W MODE =============================
	{:des "w-mode" :rules [
		;+ w+spacebar+.................................................................................................................
			;+ w+spacebarÂ²  for Expose via BTT Hotkey
			[:spacebar [ :escape [:beep] [:btt "Expose"] ] [["wÂµ" 1] ["wspacebarÂµ" 1]] ]
				;+ w+right_controlÂ²  for Expose via BTT Hotkey
				[:right_control [ :escape [:beep] [:btt "Expose"] ] [["wÂµ" 1] ["wright_controlÂµ" 1]] ]

			;+ w+e  for Expose via BTT Hotkey
			[:e [ :escape  [:btt "Expose"] ] [["wÂµ" 1] ["wspacebarÂµ" 1]] ]
			; [:spacebar :j [["wÂµ" 1] ["wspacebarÂµ" 1]] ]
			;+ w+spacebar+d for Show Desktop (via BTT)
			[:d [ :escape [:beep] [:btt "Show Desktop"] ] [["wÂµ" 1] ["wspacebarÂµ" 1]]]
			;+ w+spacebar+n for Show Notifcation Center (via BTT)
			[:n [ [:btt "Show Notification Center"] ] [["wÂµ" 1] ["wspacebarÂµ" 1]]]
			;+ w+spacebar+a for Mission Control: Application Windows
			[:a [:km "Mission Control: Application Windows"] [["wÂµ" 1] ["wspacebarÂµ" 1]]]
		;+ w+left_command+.................................................................................................................
			;+ w+left_commandÂ²  for Expose via BTT Hotkey
			[:left_command [:!!SCTOf4] [["wÂµ" 1] ["wleft_commandÂµ" 1]] ]

	:wÂµ ;* â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“â€“

			;* w+spacebar for Jump to window via context hot key
				[:spacebar [ :!CTSw [:beep]["wspacebarÂµ" 1] ] nil {:delayed{:canceled [[:beep] ["wspacebarÂµ" 0]["wÂµ" 0]]
				:invoked [[:vk_none] ["wspacebarÂµ" 0]] }:held [ [:send]  [:km "Mission Control: Application Windows"] ["wspacebarÂ¬" 1]] }]
				;* w+right_control for Jump to window via context hot key
						[:right_control [ :!CTSw [:beep]["wright_controlÂµ" 1] ] nil {:delayed{:canceled [[:vk_none] ["wright_controlÂµ" 0]["wÂµ" 0]]
						:invoked [[:vk_none] ["wright_controlÂµ" 0]] }:held [ [:send]  [:km "Mission Control: Application Windows"] ["wright_controlÂ¬" 1]] }]
			;* w+left_command for Expose (via BTT hotkey âŒƒâŒ¥â‡§âŒ˜f4)
				[:left_command [[:btt "Expose"] [:beep] ["wleft_commandÂµ" 1]] nil {:delayed
				{:canceled [["wleft_commandÂµ" 0]["wÂµ" 0]] ; 'i' is said for everything
				:invoked [[:vk_none] ["wleft_commandÂµ" 0]] } ; is triggered as delayed response even when holding
				:held [  [:km "Mission Control: Application Windows"] ["wleft_commandÂ¬" 1]] }]

			;* w+a/d for Switch Active Workspace Left/Right (via System Hotkeys)
				[:a :!TOleft_arrow]
				[:d :!TOright_arrow]
				[:comma :!TOleft_arrow]
				[:period :!TOright_arrow]
			;* w+caps_lock/f for Move Window Space Left/Right (via BTT script)
				[:caps_lock [ [:beep] [:btt "Move Window Space Left"] ] ]
				[:f [[:beep] [:btt "Move Window Space Right"] ] ]

			;* w+1 for Switch to Workspace 1 (via BTT script)
				[:1 [ [:beep] [:btt "Switch to Workspace 1"]]]
			;* w+2 for Switch to Workspace 2 (via BTT script)
				[:2 [ [:beep] [:btt "Switch to Workspace 2"]]]
			;* w+3 for Switch to Workspace 3 (via BTT script)
				[:3 [ [:beep] [:btt "Switch to Workspace 3"]]]
			;* w+4 for Switch to Workspace 4 (via BTT script)
				[:4 [ [:beep] [:btt "Switch to Workspace 4"]]]
	]}

;============================ MORE  =============================
	;! more modes temporary till moved to real mode sections
	; * semicolon-mode for...
		{:des "semicolon-mode"
		:rules [:semicolon-mode
		[:spacebar :!SOCspacebar] ; spacebar to Trigger Macro by name via â‡§âŒ¥âŒ˜SPACE
		[:t [ [:beep] [:btt "BTT Test"] ] ]
 	   ]}
	;* slash-mode for...
	{:des "slash-mode"
  	:rules [:slash-mode
    [:spacebar [ [:beep] :!SCslash] ] ; spacebar to Focus help menu via â‡§âŒ˜/
  	]}
	;* E mode for...
		{:des "e-mode for e things" ; e-mode
		:rules [:eÂµ [:c [:km "Try Current Macro"]]]}
]
:simlayer-threshold 150 ;def = 50 ;! when set to 1000 there is very noticable delay and 50 isnt enough time, 300 too much

;*==================== DEVICES and INPUT SOURCES ====================
		:devices {
				:macbook-internal [{:product_id 631 :vendor_id 1452}]
				:uhk-keyboard [{:product_id 24866 :vendor_id 7504}]
		}
 :applications       {:emacs-mode-disable-app        [ "^org\\.gnu\\.Emacs$",
                                                      "^org\\.gnu\\.AquamacsEmacs$",
                                                      "^org\\.gnu\\.Aquamacs$",
                                                      "^org\\.pqrs\\.unknownapp.conkeror$",
                                                      "^com\\.microsoft\\.rdc$",
                                                      "^com\\.microsoft\\.rdc\\.mac$",
                                                      "^com\\.microsoft\\.rdc\\.macos$",
                                                      "^com\\.microsoft\\.rdc\\.osx\\.beta$",
                                                      "^net\\.sf\\.cord$",
                                                      "^com\\.thinomenon\\.RemoteDesktopConnection$",
                                                      "^com\\.itap-mobile\\.qmote$",
                                                      "^com\\.nulana\\.remotixmac$",
                                                      "^com\\.p5sys\\.jump\\.mac\\.viewer$",
                                                      "^com\\.p5sys\\.jump\\.mac\\.viewer\\.web$",
                                                      "^com\\.teamviewer\\.TeamViewer$",
                                                      "^com\\.vmware\\.horizon$",
                                                      "^com\\.2X\\.Client\\.Mac$",
                                                      "^com\\.apple\\.Terminal$",
                                                      "^com\\.googlecode\\.iterm2$",
                                                      "^co\\.zeit\\.hyperterm$",
                                                      "^co\\.zeit\\.hyper$",
                                                      "^io\\.alacritty$",
                                                      "^net\\.kovidgoyal\\.kitty$",
                                                      "^org\\.vim\\.",
                                                      "^com\\.qvacua\\.VimR$",
                                                      "^com\\.vmware\\.fusion$",
                                                      "^com\\.vmware\\.horizon$",
                                                      "^com\\.vmware\\.view$",
                                                      "^com\\.parallels\\.desktop$",
                                                      "^com\\.parallels\\.vm$",
                                                      "^com\\.parallels\\.desktop\\.console$",
                                                      "^org\\.virtualbox\\.app\\.VirtualBoxVM$",
                                                      "^com\\.vmware\\.proxyApp\\.",
                                                      "^com\\.parallels\\.winapp\\.",
                                                      "^org\\.x\\.X11$",
                                                      "^com\\.apple\\.x11$",
                                                      "^org\\.macosforge\\.xquartz\\.X11$",
                                                      "^org\\.macports\\.X11$",
                                                      "^com\\.sublimetext\\.",
                                                      "^com\\.microsoft\\.VSCode$"]
                      :Emacs                         ["^org\\.gnu\\.Emacs$"
                                                      "^org\\.gnu\\.AquamacsEmacs$"
                                                      "^org\\.gnu\\.Aquamacs$"]
                      :Chromes                       ["^com\\.google\\.Chrome$", "^org\\.chromium\\.Chromium$", "^com\\.google\\.Chrome\\.canary$"]
                      :Firefoxes                     ["^org\\.mozilla\\.firefox$"
                                                      "^org\\.mozilla\\.firefoxdeveloperedition$"]
                      :Terminals                     ["^com\\.apple\\.Terminal$"
                                                      "^com\\.googlecode\\.iterm2$"
                                                      "^co\\.zeit\\.hyperterm$"
                                                      "^co\\.zeit\\.hyper$"
                                                      "^io\\.alacritty$"
                                                      "^net\\.kovidgoyal\\.kitty$"]
                      :vim-mode-disabled-application ["^com\\.apple\\.Terminal$"
                                                      "^com\\.googlecode\\.iterm2$"
                                                      "^co\\.zeit\\.hyperterm$"
                                                      "^co\\.zeit\\.hyper$"
                                                      "^io\\.alacritty$"
                                                      "^net\\.kovidgoyal\\.kitty$"
                                                      "^org\\.vim\\."
                                                      "^com\\.qvacua\\.VimR$"]
                      :Finder                        ["^com\\.apple\\.finder$"]
                      :Debuggers                     ["^org\\.mozilla\\.firefox$"
                                                      "^org\\.mozilla\\.firefoxdeveloperedition$"
                                                      "^com\\.google\\.Chrome$"
                                                      "^org\\.chromium\\.Chromium$"
                                                      "^com\\.google\\.Chrome\\.canary$"
                                                      "^com\\.apple\\.Safari$"
                                                      "^com\\.microsoft\\.VSCode$"]
                      :Browsers                      ["^org\\.mozilla\\.firefox$"
                                                      "^org\\.mozilla\\.firefoxdeveloperedition$"
                                                      "^com\\.google\\.Chrome$"
                                                      "^org\\.chromium\\.Chromium$"
                                                      "^com\\.google\\.Chrome\\.canary$"
                                                      "^com\\.apple\\.Safari$"]
                      :2do                           ["^com\\.guidedways\\.TodoMac.*"]}
 		:input-sources      {
			:us {:input_mode_id   ""
					:input_source_id "com.apple.keylayout.US"
					:language        "en"}}

;*============================ END ===============================
}
